// ==UserScript==
// @name         YouTube Dual Subtitles for French, German, Russian, Ukrainian
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Add dual subtitles to YouTube videos
// @author       Jim Chen
// @homepage     https://jimchen.me
// @supportURL   https://github.com/jimchen2/youtube-dual-subtitles/issues
// @match        https://www.youtube.com/*
// @match        https://cdn.jimchen.me/*
// @run-at       document-idle
// ==/UserScript==

(function() {
  'use strict';

  console.log("[Dual Subs] Script initialized");

  // Alternative way to get player data
  function getPlayerData() {
      return new Promise((resolve) => {
          const checkForPlayer = () => {
              const ytPlayer = document.querySelector('#movie_player');
              if (ytPlayer && window.ytInitialPlayerResponse) {
                  resolve(window.ytInitialPlayerResponse);
              } else {
                  setTimeout(checkForPlayer, 100);
              }
          };
          checkForPlayer();
      });
  }

  async function handleVideoNavigation() {
      console.log("[Dual Subs] Navigation detected");
      try {
          removeSubs();
          await processSubtitles();
      } catch (error) {
          console.error("[Dual Subs] Error in navigation handler:", error);
      }
  }

  async function processSubtitles() {
      console.log("[Dual Subs] Starting subtitle processing");
      try {
          const playerData = await getPlayerData();
          
          if (!playerData?.captions?.playerCaptionsTracklistRenderer) {
              console.log("[Dual Subs] No captions available");
              return;
          }

          const { captionTracks, translationLanguages } = playerData.captions.playerCaptionsTracklistRenderer;
          
          if (!captionTracks || !translationLanguages) {
              console.log("[Dual Subs] Missing caption tracks or translation languages");
              return;
          }

          console.log("[Dual Subs] Found caption tracks:", captionTracks);

          const learningTrack = findLearningTrack(captionTracks);
          if (!learningTrack) {
              console.log("[Dual Subs] No suitable learning track found");
              return;
          }

          await addSubtitles(learningTrack, translationLanguages);

      } catch (error) {
          console.error("[Dual Subs] Error processing subtitles:", error);
      }
  }

  function findLearningTrack(captionTracks) {
      const autoGenerated = captionTracks.find(track => 
          ["a.ru", "a.uk", "a.de", "a.fr"].includes(track.vssId)
      );
      
      if (autoGenerated) {
          console.log("[Dual Subs] Found auto-generated track");
          return autoGenerated;
      }

      const manualTrack = captionTracks.find(track => 
          [".ru", ".uk", ".de", ".fr"].includes(track.vssId)
      );
      
      console.log("[Dual Subs] Found manual track");
      return manualTrack;
  }

  async function addSubtitles(learningTrack, translationLanguages) {
      try {
          const englishLang = translationLanguages.find(lang => 
              lang.languageName.simpleText === "English"
          );

          if (englishLang) {
              await addSubtitle(
                  `${learningTrack.baseUrl}&fmt=vtt&tlang=${englishLang.languageCode}`,
                  "en"
              );
          }

          const originalLang = learningTrack.vssId.replace(/[.a]/g, "");
          await addSubtitle(`${learningTrack.baseUrl}&fmt=vtt`, originalLang);
      } catch (error) {
          console.error("[Dual Subs] Error adding subtitles:", error);
      }
  }

  async function addSubtitle(url, lang) {
      console.log(`[Dual Subs] Adding ${lang} subtitles`);
      try {
          const video = document.querySelector("video");
          if (!video) {
              throw new Error("No video element found");
          }

          const response = await fetch(url);
          if (!response.ok) {
              throw new Error(`Failed to fetch subtitles: ${response.status}`);
          }

          const subtitleData = (await response.text()).replaceAll("align:start position:0%", "");
          
          const track = document.createElement("track");
          track.default = true;
          track.src = "data:text/vtt," + encodeURIComponent(subtitleData);
          video.appendChild(track);
          track.track.mode = "showing";
          
          console.log(`[Dual Subs] Successfully added ${lang} subtitles`);
      } catch (error) {
          console.error("[Dual Subs] Error in addSubtitle:", error);
      }
  }

  function removeSubs() {
      const video = document.querySelector("video");
      if (video) {
          Array.from(video.getElementsByTagName("track")).forEach(track => track.remove());
      }
  }

  // Wait for page load and YouTube's own scripts to initialize
  let lastUrl = location.href;
  const observer = new MutationObserver(() => {
      if (location.href !== lastUrl) {
          lastUrl = location.href;
          setTimeout(handleVideoNavigation, 1000);
      }
  });

  observer.observe(document.body, {
      childList: true,
      subtree: true
  });

  // Initial run
  setTimeout(handleVideoNavigation, 1000);
})();
